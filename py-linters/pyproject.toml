[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "3.12.*"
flake8 = "7.1.*"
flake8-builtins = "2.5.*"
pep8-naming = "0.14.*"
flake8-commas = "4.0.*"
flake8-cognitive-complexity = "0.1.*"
flake8-docstrings = "1.7.*"
flake8-pyproject = "1.2.*"
flake8-bugbear = "24.4.26"
mypy = "1.11.2"
pydantic = "^2.9.2"
isort = "^6.0.1"

[tool.flake8]
ignore = [
    'D100', # Missing docstring in public module
    'D101', # Missing docstring in public class
    'D102', # Missing docstring in public method
    'D103', # Missing docstring in public function
    'D104', # Missing docstring in public package
    'D105', # Missing docstring in magic method
    'D106', # Missing docstring in public nested class
    'D107', # Missing docstring in __init__

    # Line break occurred before a binary operator, conflicts with W504:
    # https://github.com/mila-iqia/cookiecutter-pyml/issues/10
    'W503',
]
max-line-length = 120
max-complexity = 7
exclude = "migrations"  # exclude autogenerated Django migrations
count = true

[tool.mypy]
ignore_missing_imports = true  # Workaround to avoid installation of all django project dependencies in a linter docker image
disallow_untyped_defs = true  # Disallows defining functions without type annotations or with incomplete type annotations
plugins = [
    "pydantic.mypy",
]

[tool.isort]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "LIBS", "FIRSTPARTY", "LOCALFOLDER"]
known_libs = []
line_length = 120
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
known_third_party = []
known_first_party = ["users", "core"]
# Remove app after sorting imports there
skip_glob = [
    "*/*.py",
    "*/users/*.py",
    "*/core/*.py",
]
